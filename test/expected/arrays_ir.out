; Zag Readable Intermediate Representation
; Function header formatted as:
; @func[<max-stack-size>](<param-type>,...)

extern @printf(ptr) i32

@main[112]() i32:
    %s[16] = ref i32 %s[0]
    %s[24] = add ptr %s[16], i64 0
    store [%s[24]], i32 1
    %s[16] = ref i32 %s[0]
    %s[24] = add ptr %s[16], i64 4
    store [%s[24]], i32 2
    %s[16] = ref i32 %s[0]
    %s[24] = add ptr %s[16], i64 8
    store [%s[24]], i32 3
    %s[16] = ref i8 %data[0]
    %s[24] = ref i32 %s[0]
    %s[32] = add ptr %s[24], i64 0
    %s[40] = ref i32 %s[0]
    %s[48] = add ptr %s[40], i64 4
    %s[56] = ref i32 %s[0]
    %s[64] = add ptr %s[56], i64 8
    %s[12] = i32 call @printf(ptr %s[16], i32 deref %s[32], i32 deref %s[48], i32 deref %s[64])
    %s[20] = i32 4
    %s[16] = i32 5
    %s[12] = i32 6
    %s[32] = ref i8 %data[18]
    %s[40] = ref i32 %s[12]
    %s[48] = add ptr %s[40], i64 0
    %s[56] = ref i32 %s[12]
    %s[64] = add ptr %s[56], i64 4
    %s[72] = ref i32 %s[12]
    %s[80] = add ptr %s[72], i64 8
    %s[24] = i32 call @printf(ptr %s[32], i32 deref %s[48], i32 deref %s[64], i32 deref %s[80])
    %s[24] = ref i32 %s[12]
    %s[32] = add ptr %s[24], i64 4
    store [%s[32]], i32 50
    %s[32] = ref i8 %data[36]
    %s[40] = ref i32 %s[12]
    %s[48] = add ptr %s[40], i64 0
    %s[56] = ref i32 %s[12]
    %s[64] = add ptr %s[56], i64 4
    %s[72] = ref i32 %s[12]
    %s[80] = add ptr %s[72], i64 8
    %s[24] = i32 call @printf(ptr %s[32], i32 deref %s[48], i32 deref %s[64], i32 deref %s[80])
    %s[24] = i64 0
.L0:
    %s[32] = slt i64 %s[24], i64 3
    jmpz .L1, i64 %s[32]
    %s[40] = ref i8 %data[67]
    %s[48] = ref i32 %s[12]
    %s[64] = mul i64 %s[24], i64 4
    %s[56] = add ptr %s[48], i64 %s[64]
    %s[32] = i32 call @printf(ptr %s[40], i64 %s[24], i32 deref %s[56])
    %s[32] = add i64 %s[24], i64 1
    %s[24] = i64 %s[32]
    jmp .L0
.L1:
    %s[35] = i8 1
    %s[34] = i8 0
    %s[33] = i8 1
    %s[32] = i8 0
    %s[40] = ref i8 %data[84]
    %s[48] = ref i8 %s[32]
    %s[56] = add ptr %s[48], i64 0
    %s[64] = ref i8 %s[32]
    %s[72] = add ptr %s[64], i64 1
    %s[80] = ref i8 %s[32]
    %s[88] = add ptr %s[80], i64 2
    %s[96] = ref i8 %s[32]
    %s[104] = add ptr %s[96], i64 3
    %s[36] = i32 call @printf(ptr %s[40], i8 deref %s[56], i8 deref %s[72], i8 deref %s[88], i8 deref %s[104])
    ret i32 0


Data:
  0: 61 72 72 61 79 31 3A 20 25 75 20 25          array1:.%u.%
  c: 75 20 25 75  A  0 61 72 72 61 79 32          u.%u..array2
 18: 3A 20 25 75 20 25 75 20 25 75  A  0          :.%u.%u.%u..
 24: 61 72 72 61 79 32 20 61 66 74 65 72          array2.after
 30: 20 75 70 64 61 74 65 3A 20 25 75 20          .update:.%u.
 3c: 25 75 20 25 75  A  0 61 72 72 61 79          %u.%u..array
 48: 32 5B 25 75 5D 20 3D 20 25 75  A  0          2[%u].=.%u..
 54: 66 6C 61 67 73 3A 20 25 75 20 25 75          flags:.%u.%u
 60: 20 25 75 20 25 75  A  0                      .%u.%u..
