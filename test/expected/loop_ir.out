; Zag Readable Intermediate Representation
; Function header formatted as:
; @func[<max-stack-size>](<param-type>,...)


@loop[8]() i32:
    %s[0] = i32 0
.L0:
    %s[4] = slt i32 %s[0], i32 1000
    jmpz .L1, i32 %s[4]
    %s[0] = add i32 %s[0], i32 1
    jmp .L0
.L1:
    ret i32 %s[0]

@loop_break[8]() i32:
    %s[0] = i32 0
.L2:
    %s[4] = slt i32 %s[0], i32 1000
    jmpz .L3, i32 %s[4]
    %s[0] = add i32 %s[0], i32 1
    %s[4] = eq i32 %s[0], i32 500
    jmpz .L4, i32 %s[4]
    jmp .L3
.L4:
    jmp .L2
.L3:
    ret i32 %s[0]

@loop_continue[16]() i64:
    %s[0] = i64 0
.L5:
    %s[8] = slt i64 %s[0], i64 1000
    jmpz .L6, i64 %s[8]
    %s[0] = add i64 %s[0], i64 1
    %s[8] = sgt i64 %s[0], i64 500
    jmpz .L7, i64 %s[8]
    jmp .L5
.L7:
    %s[0] = add i64 %s[0], i64 1
    jmp .L5
.L6:
    ret i64 %s[0]

